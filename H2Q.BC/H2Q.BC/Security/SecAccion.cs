///////////////////////////////////////////////////////////
//  SecAccion.cs
//  Implementation of the Class SecAccion
//  Generated by Enterprise Architect
//  Created on:      18-dic-2015 16:27:02
//  Original author: m_figueroa
///////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using H2Q.BC.Base;
using H2Q.BC.DataAccess;

namespace H2Q.BC.Security
{
    [Serializable]
    /// <summary>
    /// Clase que representa la lista de modulos y acciones permitidas y autorizadas a
    /// los distintos Roles.
    /// </summary>
    /// 
    public class SecAccion : Singular
    {
        ///// <summary>
        ///// Nombre del elemento. (Ej.: ModuloEnrolamientoEmpleado, SubirDocumento,
        ///// EliminarUsuario, etc.)
        ///// </summary>
        //public string Nombre;
        ///// <summary>
        ///// Descripción del elemento
        ///// </summary>
        //public string Descripcion;

        public SecAccion(Usuario usr)
        {
            base.User = usr;
            DataExplorer de = new DataExplorer();
            this.DREntity.ItemArray = de.InitDataRow(this).ItemArray;
        }

        /// <summary>
        /// Método que lee la lista de Acciones definidas para el sistema
        /// </summary>
        public void ReadAll()
        {
            DALCSQLServer DALC = this.GetCommonDalc();
            ArrayList parametros = new ArrayList();
            this.Datos = DALC.ExecuteStoredProcedure("READ_ALL_SECACCION", parametros);

        }

        /// <summary>
        /// Método que inserta un registro de relación entre Rol y Accion
        /// </summary>
        /// <param name="IdSecAccion"></param>
        /// <param name="IdRol"></param>
        public double CreateRelacion(int IdRol, int IdSecAccion)
        {
            double ID = 0;
            DALCSQLServer DALC = GetCommonDalc();
            ArrayList parametros = new ArrayList();
            SqlParameter param = new SqlParameter("@IdRol", IdRol);
            parametros.Add(param);
            param = new SqlParameter("@IdSecAccion", IdSecAccion);
            parametros.Add(param);
            param = new SqlParameter("@IdUserCreate", this.User.Id);
            parametros.Add(param);
            param = new SqlParameter("@FechaCreate", DateTime.Now);
            parametros.Add(param);
            ID = DALC.ExecuteSQLScalar("INS_RELA_ROL_SECACCION", parametros);
            return ID;
        }
        /// <summary>
        /// Método que elimina un registro de relación entre Rol y Accion
        /// </summary>
        public void DeleteRelacion(int IdRol, int IdSecAccion)
        {
            DALCSQLServer DALC = GetCommonDalc();
            ArrayList parametros = new ArrayList();
            SqlParameter param = new SqlParameter("@IdRol", IdRol);
            parametros.Add(param);
            param = new SqlParameter("@IdSecAccion", IdSecAccion);
            parametros.Add(param);
            DALC.ExecuteNonQuery("DEL_RELA_ROL_SECACCION", ref parametros);
        }
    }
}
